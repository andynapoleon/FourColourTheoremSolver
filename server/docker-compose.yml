version: "3"

services:
  api-gateway-service:
    build:
      context: ./api-gateway-service
      dockerfile: api-gateway-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      COLORING_SERVICE_URL: http://solver-service
      AUTHENTICATION_SERVICE_URL: http://authentication-service
      MAP_STORAGE_SERVICE_URL: http://map-storage-service
      PORT: 80

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: users
      PORT: 80

  solver-service:
    build:
      context: ./solver-service
      dockerfile: solver-service.dockerfile
    restart: always
    ports:
      - "8082:80"
    environment:
      PORT: 80

  map-storage-service:
    build:
      context: ./map-storage-service
      dockerfile: map-storage-service.dockerfile
    restart: always
    ports:
      - "8083:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - PORT=80
      - MONGO_URI=mongodb://admin:password@mongo:27017/?authSource=admin
      - MONGO_DB=mapstore
    depends_on:
      - mongo

  logger-service:
    build:
      context: ./logger-service
      dockerfile: logger-service.dockerfile
    restart: always
    ports:
      - "50001:50001"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - MONGO_URI=mongodb://admin:password@mongo:27017/?authSource=admin
      - MONGO_DB=logs
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq
    depends_on:
      - mongo
      - rabbitmq

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: mapstore
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
